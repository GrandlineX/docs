{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"GrandLineX Welcome to the GrandLineX Documentation GrandLineX is an out-of-the-box server framework on top of ExpressJs. Goto Moduels for details. Short Links Kernel Docs to OpenApi","title":"Home"},{"location":"#grandlinex","text":"","title":"GrandLineX"},{"location":"#welcome-to-the-grandlinex-documentation","text":"GrandLineX is an out-of-the-box server framework on top of ExpressJs. Goto Moduels for details.","title":"Welcome to the GrandLineX Documentation"},{"location":"#short-links","text":"Kernel Docs to OpenApi","title":"Short Links"},{"location":"modules/","text":"Kernel Kernel features Extendable module structure Managed DB Connection Encrypted credential store Backend authorization with JWT Documentation Version 0.9.x Kernel Docs Kernel API - SwaggerUI Structure","title":"Modules"},{"location":"modules/#kernel","text":"","title":"Kernel"},{"location":"modules/#kernel-features","text":"Extendable module structure Managed DB Connection Encrypted credential store Backend authorization with JWT","title":"Kernel features"},{"location":"modules/#documentation","text":"","title":"Documentation"},{"location":"modules/#version-09x","text":"Kernel Docs Kernel API - SwaggerUI","title":"Version 0.9.x"},{"location":"modules/#structure","text":"","title":"Structure"},{"location":"utils/","text":"Util List Docs to OpenApi Docs to OpenApi v.3 Description This Project converts comments in your code or in your dependencies to an OpenApi Spec. The following annotations are supported. - @openapi - @swagger All comments with these annotations will be pasted as a singe element in the path definition array. For all other OpenApi configs the glconf.json is used. Installation npm i @grandlinex/docs-to-openapi Config fields rootDir Relative path to your sourcecode. filetypes List of file extensions to monitor. externalModules If your dependencies use also these annotations you can merge these in your curren spec. outPutDir (optional) Relative path for the Spec. output. Quick Start Create a glconf.json in the root dir of your project (see config 01 or 02). Edit your base Config file like in the official Swagger Doc Add a Comment to your soruce code in yml syntax like: /** * @openapi * /ping: * get: * summary: ping * tags: * - basic * responses: * 200: * description: OK * 401: * description: not authorized */ run npx @grandlinex/docs-to-openapi If you install the package as a dependency then you can use the makeOpenApi command. Config File Examples: Config 01 glconf.json (minimal) { \"rootDir\": \"./src\", \"filetypes\": [\"ts\",\"js\"], \"externalModules\": [], \"baseConfig\": { \"info\": { \"title\": \"Hello World\", \"version\": \"1.0.0\", \"description\": \"A sample API\" }, \"servers\": [ { \"url\": \"http://localhost:9257\" } ] } } Config 02 glconf.json (Bearer JWT) { \"rootDir\": \"./src\", \"filetypes\": [\"ts\",\"js\"], \"externalModules\": [\"./node_modules/module_a\",\"./node_modules/module_b\"], \"outPutDir\": \"./dist\", \"baseConfig\": { \"info\": { \"title\": \"Hello World\", \"version\": \"1.0.0\", \"description\": \"A sample API\" }, \"servers\": [ { \"url\": \"http://localhost:9257\" } ], \"security\": [ { \"bearerAuth\": [] } ], \"components\": { \"securitySchemes\": { \"bearerAuth\": { \"type\": \"http\", \"scheme\": \"bearer\", \"bearerFormat\": \"JWT\" } } } } }","title":"Utils"},{"location":"utils/#util-list","text":"Docs to OpenApi","title":"Util List"},{"location":"utils/#docs-to-openapi-v3","text":"","title":"Docs to OpenApi v.3"},{"location":"utils/#description","text":"This Project converts comments in your code or in your dependencies to an OpenApi Spec. The following annotations are supported. - @openapi - @swagger All comments with these annotations will be pasted as a singe element in the path definition array. For all other OpenApi configs the glconf.json is used.","title":"Description"},{"location":"utils/#installation","text":"npm i @grandlinex/docs-to-openapi","title":"Installation"},{"location":"utils/#config-fields","text":"rootDir Relative path to your sourcecode. filetypes List of file extensions to monitor. externalModules If your dependencies use also these annotations you can merge these in your curren spec. outPutDir (optional) Relative path for the Spec. output.","title":"Config fields"},{"location":"utils/#quick-start","text":"Create a glconf.json in the root dir of your project (see config 01 or 02). Edit your base Config file like in the official Swagger Doc Add a Comment to your soruce code in yml syntax like: /** * @openapi * /ping: * get: * summary: ping * tags: * - basic * responses: * 200: * description: OK * 401: * description: not authorized */ run npx @grandlinex/docs-to-openapi If you install the package as a dependency then you can use the makeOpenApi command.","title":"Quick Start"},{"location":"utils/#config-file-examples","text":"","title":"Config File Examples:"},{"location":"utils/#config-01-glconfjson-minimal","text":"{ \"rootDir\": \"./src\", \"filetypes\": [\"ts\",\"js\"], \"externalModules\": [], \"baseConfig\": { \"info\": { \"title\": \"Hello World\", \"version\": \"1.0.0\", \"description\": \"A sample API\" }, \"servers\": [ { \"url\": \"http://localhost:9257\" } ] } }","title":"Config 01 glconf.json (minimal)"},{"location":"utils/#config-02-glconfjson-bearer-jwt","text":"{ \"rootDir\": \"./src\", \"filetypes\": [\"ts\",\"js\"], \"externalModules\": [\"./node_modules/module_a\",\"./node_modules/module_b\"], \"outPutDir\": \"./dist\", \"baseConfig\": { \"info\": { \"title\": \"Hello World\", \"version\": \"1.0.0\", \"description\": \"A sample API\" }, \"servers\": [ { \"url\": \"http://localhost:9257\" } ], \"security\": [ { \"bearerAuth\": [] } ], \"components\": { \"securitySchemes\": { \"bearerAuth\": { \"type\": \"http\", \"scheme\": \"bearer\", \"bearerFormat\": \"JWT\" } } } } }","title":"Config 02 glconf.json (Bearer JWT)"}]}